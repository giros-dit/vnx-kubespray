<?xml version="1.0" encoding="UTF-8"?>

<!--

~~~~~~~~~~~~~~~~~~~~
VNX Sample scenarios
~~~~~~~~~~~~~~~~~~~~

Name:        tutorial_kubespray
Description: KVM-based scenario that sets up a three-node Kubernetes (k8s) cluster
             KVM machines run Ubuntu 18.04LTS 64bit as Guest OS.

             LXC containers are utilized to emulate router r1 and end-user h1.

This file is part of the Virtual Networks over LinuX (VNX) Project distribution. 
(www: http://www.dit.upm.es/vnx - e-mail: vnx@dit.upm.es) 

Departamento de Ingenieria de Sistemas Telematicos (DIT)
Universidad Politecnica de Madrid
SPAIN

-->

<vnx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="/usr/share/xml/vnx/vnx-2.00.xsd">
  <global>
    <version>2.0</version>
    <scenario_name>tutorial_kubespray</scenario_name>
    <ssh_key>./conf/ssh/id_rsa.pub</ssh_key>
    <automac/>
    <vm_mgmt type="private" network="192.168.50.0" mask="24" offset="16">
       <host_mapping />
    </vm_mgmt>
    <vm_defaults>
        <console id="0" display="no"/>
        <console id="1" display="yes"/>
    </vm_defaults>
  </global>

  <net name="virbr0" mode="virtual_bridge" managed="no"/>
  <net name="k8s_LAN" mode="virtual_bridge"/>
  <net name="user_LAN" mode="virtual_bridge"/>

  <vm name="k8s-master" type="libvirt" subtype="kvm" os="linux" exec_mode="sdisk" arch="x86_64" vcpu="2">
    <mem>2G</mem>
    <filesystem type="cow">filesystems/rootfs_k8s_master</filesystem>
    <if id="1" net="k8s_LAN">
      <ipv4>10.10.10.10/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.10.10.1">10.10.20.0/24</route>
    <filetree seq="on_boot" root="/root/.ssh/">conf/ssh/id_rsa*</filetree>
    <exec seq="on_boot" type="verbatim" ostype="system">
      ssh-keyscan -H 10.10.10.11 >> /root/.ssh/known_hosts
      ssh-keyscan -H 10.10.10.12 >> /root/.ssh/known_hosts
    </exec>
    <exec seq="add-worker1" type="verbatim" ostype="system">
      JOINCMD=$(kubeadm token create --print-join-command | sed 's/127.0.0.1/10.10.10.10/')
      ssh 10.10.10.11 "$JOINCMD"
    </exec>
    <exec seq="add-worker2" type="verbatim" ostype="system">
      JOINCMD=$(kubeadm token create --print-join-command | sed 's/127.0.0.1/10.10.10.10/')
      ssh 10.10.10.12 "$JOINCMD"
    </exec>
  </vm>

  <vm name="k8s-worker1" type="libvirt" subtype="kvm" os="linux" exec_mode="sdisk" arch="x86_64" vcpu="1">
    <mem>2G</mem>
    <filesystem type="cow">filesystems/rootfs_k8s_worker</filesystem>
    <if id="1" net="k8s_LAN">
      <ipv4>10.10.10.11/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.10.10.1">10.10.20.0/24</route>
    <exec seq="on_boot" type="verbatim" ostype="system">
      rm /etc/hosts.backup /etc/hosts.*2021*
    </exec>
    <exec seq="restart-kubelet1" type="verbatim" ostype="system">
      #systemctl restart kubelet
    </exec>
  </vm>
  
  <vm name="k8s-worker2" type="libvirt" subtype="kvm" os="linux" exec_mode="sdisk" arch="x86_64" vcpu="1">
    <mem>2G</mem>
    <filesystem type="cow">filesystems/rootfs_k8s_worker</filesystem>
    <if id="1" net="k8s_LAN">
      <ipv4>10.10.10.12/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
    <route type="ipv4" gw="10.10.10.1">10.10.20.0/24</route>
    <exec seq="on_boot" type="verbatim" ostype="system">
      sed -i -e 's/10.10.10.11/10.10.10.12/' /etc/kubernetes/kubelet-config.yaml
      sed -i -e 's/10.10.10.11/10.10.10.12/' /etc/kubernetes/kubelet.env
      sed -i -e 's/worker1/worker2/' /etc/cni/net.d/10-calico.conflist
      sed -i -e 's/worker1/worker2/' /etc/cni/net.d/calico.conflist.template
      sed -i -e 's/worker1/worker2/' /etc/kubernetes/kubeadm-client.conf
      sed -i -e 's/worker1/worker2/' /etc/kubernetes/kubelet.env
      rm /etc/hosts.backup /etc/hosts.*2021*
    </exec>
    <exec seq="restart-kubelet2" type="verbatim" ostype="system">
      #systemctl restart kubelet
    </exec>
  </vm>

  <vm name="r1" type="lxc" arch="x86_64">
    <mem>1G</mem>
    <filesystem type="cow">/usr/share/vnx/filesystems/rootfs_lxc_ubuntu64</filesystem>
    <forwarding type="ip" />
    <if id="1" net="k8s_LAN">
      <ipv4>10.10.10.1/24</ipv4>
    </if>
    <if id="2" net="user_LAN">
      <ipv4>10.10.20.1/24</ipv4>
    </if>
    <if id="9" net="virbr0">
      <ipv4>dhcp</ipv4>
    </if>
  </vm>

  <host>
    <hostif net="user_LAN">
        <ipv4>10.10.20.2/24</ipv4>
    </hostif>
    <route type="ipv4" gw="10.10.20.1">10.10.10.0/24</route>
    <route type="ipv4" gw="10.10.20.1">10.10.100.0/24</route>
  </host>

</vnx>

